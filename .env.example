# GitHub App Configuration
GITHUB_APP_ID=123456
GITHUB_PRIVATE_KEY="-----BEGIN RSA PRIVATE KEY-----\\n...your private key here...\\n-----END RSA PRIVATE KEY-----"
GITHUB_WEBHOOK_SECRET=your-webhook-secret

# GitHub Personal Access Token (for MCP HTTP access)
# Used by MCP servers to access GitHub API via https://api.githubcopilot.com/mcp
# Required scopes: repo, read:org
GITHUB_TOKEN=github_pat_
# Legacy alias (deprecated, use GITHUB_TOKEN instead)
GITHUB_PAT=github_pat_

# Provider Selection (claude or codex)
PROVIDER=claude

# Claude API Configuration
ANTHROPIC_API_KEY=sk-ant-xxx
CLAUDE_MODEL=claude-sonnet-4-5-20250929
#ANTHROPIC_BASE_URL=


# Codex/OpenAI API Configuration
OPENAI_API_KEY=sk-xxx
OPENAI_BASE_URL=https://api.openai.com/v1  # Optional: custom API endpoint
CODEX_MODEL=gpt-5-codex

# Server Configuration
PORT=3000
TRIGGER_KEYWORD=/code

# Git Identity (Optional override for commit author)
# SWE_AGENT_GIT_NAME=swe-agent[bot]
# SWE_AGENT_GIT_EMAIL=123456+swe-agent[bot]@users.noreply.github.com

# Security Configuration (Optional)
# Comma-separated list of tools to disallow (e.g., dangerous commands)
# Example: DISALLOWED_TOOLS="Bash(rm:*),Bash(sudo:*),Bash(dd:*),Bash(mkfs:*)"
DISALLOWED_TOOLS=

# MCP Tool Toggles (Optional)
# Enable updating the coordinating GitHub comment via MCP
# ENABLE_GITHUB_MCP_COMMENT=true

# Enable file operations via MCP (commit/delete) â€” recommended when using signing
# ENABLE_GITHUB_MCP_FILES=true

# Enable GitHub Actions/CI inspection tools via MCP
# ENABLE_GITHUB_MCP_CI=true

# Commit Signing Configuration
# When true, uses GitHub API to commit changes (supports automatic signing)
# When false, uses local git commands (default)
# USE_COMMIT_SIGNING=false
# Note: When USE_COMMIT_SIGNING=true:
#   - Commits are made via GitHub API with automatic signing
#   - Local git commands are disabled for security
#   - Requires github_push_files MCP tool

# Debugging (Optional)
# Enable detailed provider parsing logs and git change detection logs
# DEBUG_CLAUDE_PARSING=true
# DEBUG_GIT_DETECTION=true

# Permission Overrides (Optional; use with care)
# When true, bypass installer-only check and allow any user to trigger.
# In production, prefer leave unset or false.
# ALLOW_ALL_USERS=false
# Alternative: set PERMISSION_MODE=open to allow all users.
